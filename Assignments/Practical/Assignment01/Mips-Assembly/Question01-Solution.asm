.data   
input_prompt:   .asciiz "Enter an integer:\n"
output_prompt:  .asciiz "Your Hex Number is:\n"

.text   
                .globl  main

main:           
    # در این بخش متن مربوط به ورودی گرفتن عدد چاپ می شود.
    li      $v0,        4
    la      $a0,        input_prompt
    syscall 
    # در این بخش عدد توسط کاربر ورودی داده می شود.
    li      $v0,        5
    syscall 
    move    $t0,        $v0                         # input_number --> t0

    # در این بخش متن مروبط به خروجی دادن عدد در مبنای 16 چاپ میشود.
    li      $v0,        4
    la      $a0,        output_prompt
    syscall 

    # در این بخش متغیرهای اصلی برنامه مقداردهی میشوند.
    li      $t1,        8                           # Loop_counter --> t1
    li      $t2,        28                          # right_shift_counter -->t2
    # right_shift_counter: وقتی عدد اصلی را با ماسک اند میکنیم، نیاز است تا جواب را به راست شیفت دهیم
    li      $t3,        0xF0000000                  # آن عددی که نیاز است به اندازه ی آن به راست شیفت دهیم جواب را
    li      $t5,        0                           # یک فلگ برای اینکه چک کنیم آیا اولین عدد غیر از صفر را خروجی داده ایم یا نه

loop:           
    and     $t4,        $t0,            $t3         # عدد ورودی را با ماسک اند میکنیم
    srlv    $t4,        $t4,            $t2         # جواب را به راست شیفت میدهیم
    addi    $t2,        $t2,            -4          #آن عددی که به آن اندازه شیفت میدهیم را 4 واحد کم میکنیم تا در مرحله بعد 4تا کمتر شیفت بخوره
    srl     $t3,        $t3,            4           # ماسک را 4 واحد شیفت راست میدهیم تا در دور بعد به سراغ 4 بیت بعدی برویم
    beq     $t5,        1,              label       # اگر اولین عدد غیر صفر چاپ شده باشد از اینجا به بعد 0 هارا هم چاپ میکنیم
    beq     $t4,        $zero,          loop_zero   # اگر اولین عدد غیر صفر چاپ نشده باشد و عدد فعلی صفر باشد، به این بخش میرویم
label:          
    bge     $t4,        10,             print_char  # اگر عدد از 10 بزرگتر مساوی بود، به بخش چاپ کارکتر میرویم
    addi    $t5,        $zero,          1           # حال که یک کارکتر چاپ شده، فلگ مربوط به چپ اولین صفر را اپدیت میکنیم
    # در این بخش عدد بین 1 تا 9 را چاپ میکنیم
    li      $v0,        1
    move    $a0,        $t4
    syscall 
    j       loop_zero
print_char:     
    # در این بخش اعداد بین 10 تا 15 چاپ میشوند
    addi    $t5,        $zero,          1           # فلگ مربوط به اولین 0 را اپدیت میکنیم
    addi    $t4,        $t4,            -10         # از عدد 10 واحد کم میکنیم تا به درایه درستی از ارایه 10 تا 15 برسیم
    addi    $t4,        $t4,            97          # تبدیل به کارکتر اسکی درست
    li      $v0,        11                          # کد مربوط به چاپ کارکتر
    move    $a0,        $t4
    syscall 
    j       loop_zero
loop_zero:      
    addi    $t1,        $t1,            -1          # یک واحد از شمارنده حلقه کم میکنیم
    bne     $t1,        $zero,          loop        # اگر شمارنده غیرصفر بود حلقه را ادامه میدهیم
end_program:    
    # در این بخش برنامه پایان میباید
    li      $v0,        10
    syscall 